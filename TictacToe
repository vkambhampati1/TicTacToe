import java.util.Scanner;

public class TicTacToeGame {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        char[][] grid = createEmptyGrid();
        char currentPlayer = 'X';

        printGrid(grid);

        boolean gameInProgress = true;

        while (gameInProgress) {
            System.out.println("Player " + currentPlayer + ", enter the cell coordinates (row and column) separated by space (e.g., 1 1):");

            int row, col;

            if (scanner.hasNextInt()) {
                row = scanner.nextInt();
                if (scanner.hasNextInt()) {
                    col = scanner.nextInt();
                } else {
                    System.out.println("You should enter two numbers separated by a space.");
                    scanner.next(); // Consume the invalid input
                    continue;
                }
            } else {
                System.out.println("You should enter two numbers separated by a space.");
                scanner.next(); // Consume the invalid input
                continue;
            }

            if (isValidMove(row, col, grid)) {
                makeMove(row, col, grid, currentPlayer);
                printGrid(grid);
                if (checkWinner(grid, currentPlayer)) {
                    System.out.println(currentPlayer + " wins");
                    gameInProgress = false;
                } else if (isDraw(grid)) {
                    System.out.println("Draw");
                    gameInProgress = false;
                }
                currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
            } else {
                System.out.println("Invalid move. Try again.");
            }
        }
    }

    public static char[][] createEmptyGrid() {
        char[][] grid = new char[3][3];
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                grid[i][j] = ' ';
            }
        }
        return grid;
    }

    public static void printGrid(char[][] grid) {
        System.out.println("---------");
        for (int i = 0; i < 3; i++) {
            System.out.print("| ");
            for (int j = 0; j < 3; j++) {
                System.out.print(grid[i][j] + " ");
            }
            System.out.println("|");
        }
        System.out.println("---------");
    }

    public static boolean isValidMove(int row, int col, char[][] grid) {
        if (row < 1 || row > 3 || col < 1 || col > 3) {
            System.out.println("Coordinates should be from 1 to 3.");
            return false;
        }
        int x = row - 1;
        int y = col - 1;
        if (grid[x][y] != ' ') {
            System.out.println("This cell is occupied! Choose another one.");
            return false;
        }
        return true;
    }

    public static void makeMove(int row, int col, char[][] grid, char player) {
        int x = row - 1;
        int y = col - 1;
        grid[x][y] = player;
    }

    public static boolean checkWinner(char[][] grid, char player) {
        for (int i = 0; i < 3; i++) {
            if (grid[i][0] == player && grid[i][1] == player && grid[i][2] == player) {
                return true; // Row win
            }
            if (grid[0][i] == player && grid[1][i] == player && grid[2][i] == player) {
                return true; // Column win
            }
        }
        if (grid[0][0] == player && grid[1][1] == player && grid[2][2] == player) {
            return true; // Diagonal win (top-left to bottom-right)
        }
        if (grid[0][2] == player && grid[1][1] == player && grid[2][0] == player) {
            return true; // Diagonal win (top-right to bottom-left)
        }
        return false;
    }

    public static boolean isDraw(char[][] grid) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (grid[i][j] == ' ') {
                    return false; // There is an empty cell, game is not a draw yet
                }
            }
        }
        return true; // All cells are occupied, it's a draw
    }
}
